version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.8.5
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip
prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox

jobs:
  test_WNVPrediction_py36:
    docker:
      - image: circleci/python:3.6.9
    working_directory: ~/project/packages/WNVPrediction
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run tests with Python 3.6
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py36
  test_WNVPrediction_py37:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/packages/WNVPrediction
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run tests with Python 3.7
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py37
  test_WNVPrediction_py38:
    docker:
      - image: circleci/python:3.8.5
    working_directory: ~/project/packages/WNVPrediction
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run tests with Python 3.8
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py38
  test_wnv_api_py36:
    docker:
      - image: circleci/python:3.6.9
    working_directory: ~/project/packages/wnv_api
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run API tests with Python 3.6
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py36
  test_wnv_api_py37:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/packages/wnv_api
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run API tests with Python 3.7
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py37
  test_wnv_api_py38:
    docker:
      - image: circleci/python:3.8.5
    working_directory: ~/project/packages/wnv_api
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run API tests with Python 3.8
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox -e py38
  train_and_upload_WNVPrediction:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/WNVPrediction/requirements.txt
      - run: 
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/WNVPrediction python3 packages/WNVPrediction/WNVPrediction/train_pipeline.py
      - run: 
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/WNVPrediction/

  section_9_differential_tests:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Capturing previous model predictions
          command: |
            . venv/bin/activate
            pip install -r packages/wnv_api/diff_test_requirements.txt
            PYTHONPATH=./packages/wnv_api python3 packages/wnv_api/tests/differential_tests/capture_model_predictions.py
      - run:
          name: Runnning differential tests
          command: |
            . venv/bin/activate
            pip install -r packages/wnv_api/requirements.txt
            py.test -vv packages/wnv_api/tests -m differential
 
  section_11_build_and_push_to_heroku_docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Setup Heroku CLI
          command: |
            wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: 
          name: Build and Push Image
          command: |
            make build-wnv-api-heroku push-wnv-api-heroku
      - run: 
          name: Release to Heroku
          command: |
            heroku container:release web --app $HEROKU_APP_NAME

   # section_10_deploy_to_heroku:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - run:
  #         name: Deploy to Heroku
  #         command: |
  #           git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master          
  # section_12_publish_docker_image_to_aws:
  #   <<: *defaults
  #   working_directory: ~/project/packages/ml_models
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run:
  #         name: Publishing docker image to aws ECR
  #         command: |
  #           sudo pip install awscli
  #           eval $(aws ecr get-login --no-include-email --region us-east-1)
  #           make build-ml-api-aws tag-ml-api push-ml-api-aws
  #           aws ecs update-service --cluster ml-api-cluster --service custom-service --task-definition  first-run-task-definition --force-new-deployment
  # section_13_train_and_upload_neural_network_model:
  #   docker:
  #     - image: circleci/python:3.6.4-stretch
  #   working_directory: ~/project
  #   steps:
  #     - checkout
  #     - *prepare_venv
  #     - run: 
  #         name: Install requirements
  #         command: |
  #           . venv/bin/activate
  #           pip install -r packages/neural_network_model/requirements.txt
  #     - run:
  #         name: Fetch Training data - 2GB
  #         command: |
  #           . venv/bin/activate
  #           chmod +x ./scripts/fetch_kaggle_large_dataset.sh
  #           ./scripts/fetch_kaggle_large_dataset.sh
  #     - run: 
  #         name: Train model
  #         command: |
  #           . venv/bin/activate
  #           PYTHONPATH=./packages/neural_network_model python3 packages/neural_network_model/neural_network_model/train_pipeline.py
  #     - run: 
  #         name: Publish model to Gemfury
  #         command: |
  #           . venv/bin/activate
  #           chmod +x ./scripts/publish_model.sh
  #           ./scripts/publish_model.sh ./packages/neural_network_model/
workflows:
  version: 2
  test-all:
    jobs:
      - test_WNVPrediction_py36
      - test_WNVPrediction_py37
      - test_WNVPrediction_py38
      - test_wnv_api_py36
      - test_wnv_api_py37
      # - test_wnv_api_py38 pending NN model update
      - section_9_differential_tests
      - train_and_upload_WNVPrediction:
          requires:
            - test_WNVPrediction_py36
            - test_WNVPrediction_py37
            - test_WNVPrediction_py38
            - test_wnv_api_py36
            - test_wnv_api_py37
          # - section_9_differential_tests
          filters:
            branches:
              only:
                - master
      - section_10_deploy_to_heroku:
          requires:
            - train_and_upload_WNVPrediction
          filters:
            branches:
              only:
                - master
     # - section_11_build_and_push_to_heroku_docker:
#          requires:
#            - train_and_upload_WNVPrediction
#          filters:
#            branches:
#              only:
#                - master
      # - section_12_publish_docker_image_to_aws:
      #     requires:
      #       - train_and_upload_WNVPrediction
      #     filters:
      #       branches:
      #         only:
      #           - master
#      - section_13_train_and_upload_neural_network_model:
#          requires:
#            - test_WNVPrediction
#            - test_wnv_api
#            - section_9_differential_tests
            # - train_and_upload_WNVPrediction
          # filters:
          #   branches:
          #     only:
          #       - master